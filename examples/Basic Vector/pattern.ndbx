<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ndbx formatVersion="0.9" type="file">
    <var name="canvasWidth" value="1000.0"/>
    <var name="canvasHeight" value="1000.0"/>
    <var name="canvasBackground" value="#ffffe9ff"/>
    <node name="align1" prototype="corevector.align" x="180" y="10">
        <param name="halign">
            <value>center</value>
        </param>
        <param name="valign">
            <value>top</value>
        </param>
    </node>
    <node name="align2" prototype="corevector.align" x="180" y="110">
        <param name="y">
            <value>-17.0</value>
        </param>
    </node>
    <node name="align3" prototype="corevector.align" x="340" y="110">
        <param name="x">
            <value>-160.0</value>
        </param>
        <param name="y">
            <value>70.0</value>
        </param>
    </node>
    <node name="color1" prototype="corevector.color" x="340" y="200">
        <param name="fill">
            <value>#00000000</value>
        </param>
        <param name="strokeWidth">
            <value>1.0</value>
        </param>
    </node>
    <node name="compound1" prototype="corevector.compound" x="100" y="10">
        <param name="function">
            <value>subtracted</value>
        </param>
        <param name="invert_difference">
            <value>1</value>
        </param>
    </node>
    <node name="connect" prototype="corevector.filter" x="340" y="10">
        <param name="_code">
            <value type="python"><![CDATA[from nodebox.graphics import Path

def cook(self):
    if self.shape is None: return None
    points = self.shape.points
    start = points[0]
    p = Path()
    p.strokeColor = self.stroke
    p.strokeWidth = self.strokewidth 
    p.fill = None
    num = 0
    p.moveto(start.x,start.y)
    for point in points:
       p.lineto(point.x,point.y)
       num+=1
    p.close()
    return p.asGeometry()]]></value>
        </param>
        <param name="stroke" type="color">
            <value>#000000ff</value>
        </param>
        <param name="strokewidth" type="float">
            <value>2.0</value>
        </param>
    </node>
    <node name="copy1" prototype="corevector.copy" x="260" y="10">
        <param name="copies">
            <value>4</value>
        </param>
        <param name="r">
            <value>-90.0</value>
        </param>
        <param name="sx">
            <value>30.0</value>
        </param>
        <param name="sy">
            <value>30.0</value>
        </param>
    </node>
    <node name="copy2" prototype="corevector.copy" x="260" y="110">
        <param name="copies">
            <value>4</value>
        </param>
        <param name="r">
            <value>90.0</value>
        </param>
    </node>
    <node name="copy3" prototype="corevector.copy" x="420" y="110">
        <param name="copies">
            <value>4</value>
        </param>
        <param name="r">
            <value>90.0</value>
        </param>
    </node>
    <node name="ellipse1" prototype="corevector.ellipse" x="10" y="100">
        <param name="x">
            <value>-3.0517578E-5</value>
        </param>
        <param name="y">
            <value>-37.945175</value>
        </param>
        <param name="width">
            <value>308.69855</value>
        </param>
        <param name="height">
            <value>295.1467</value>
        </param>
    </node>
    <node name="polygon1" prototype="corevector.polygon" x="10" y="10">
        <param name="y">
            <value>-38.0</value>
        </param>
        <param name="radius">
            <value>92.0</value>
        </param>
        <param name="sides">
            <value>6</value>
        </param>
    </node>
    <node name="transform1" prototype="corevector.transform" rendered="true" x="420" y="200">
        <param name="sx">
            <value>20.0</value>
        </param>
        <param name="sy">
            <value>20.0</value>
        </param>
    </node>
    <conn input="copy1" output="align1" port="shape"/>
    <conn input="compound1" output="ellipse1" port="shapeB"/>
    <conn input="compound1" output="polygon1" port="shape"/>
    <conn input="align2" output="connect" port="shape"/>
    <conn input="copy3" output="align3" port="shape"/>
    <conn input="align1" output="compound1" port="shape"/>
    <conn input="connect" output="copy1" port="shape"/>
    <conn input="align3" output="copy2" port="shape"/>
    <conn input="copy2" output="align2" port="shape"/>
    <conn input="color1" output="copy3" port="shape"/>
    <conn input="transform1" output="color1" port="shape"/>
</ndbx>
